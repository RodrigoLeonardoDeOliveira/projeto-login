@charset "UTF-8";

/*
    Paleta de cores
    Verde: #49a09d
    Lilás: #5f2c82
*/

*{
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
}

body, html {
    background-color: #5f2c82;
    height: 100vh;
    width: 100vw;
}

main {
    position: relative;
    height: 100vh;
    width: 100vw;
}

section#login {
    position: absolute;
    top: 50%;
    left: 50%;
    
    overflow: hidden; /*Essa declaração serve para deixar que tudo fique por dentro da borda, que neste caso é a imagem de fundo da URL imagens/porta.jpg que está abaixo, que manterá a borda arredondada por causa do border-radius.*/

    background-color: white;
    width: 250px;
    height: 515px;
    border-radius: 20px;
    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.452);

    transform: translate(-50%, -50%); /*Obs: Faça sempre o transform e transition sempre por último, ultima declaração como neste caso, para não dar bug*/
    transition: width 0.3s, height .3s;
    transition-timing-function: ease; /*Essa declaração é utilizada para deixar o efeito de transição mais suave. */
    
}

/*OBS: A diferença para usar o position e o background-position é: o position serve para posicionar o elemento na página, neste caso a section com id login, que está baseada no main que possui o position relative (Que é o padrão). Posicionada é colocado o top, left com 50% cada e o transform:translate com -50% cada também, para centralizar o elemento que fará com que o elemento se centralize na página. Já o background- position serce para posicionar a imagem, usando a combinação que neste exercicio foi usado left e bottom (Vide exercicios anteriores que possui a ordem para posicionar imagens no backgroud-position). */

section#login > div#imagem {
    display: block;
    background: #5f2c82 url(../Imagens/porta.jpg) no-repeat;
    background-size: cover;
    background-position: center center;
    height: 200px;
}

section#login > div#formulario {
    display: block;
    padding: 10px;
}

div#formulario {
    text-align: center;
    margin-bottom: 10px;
}

div#formulario > p {
    font-size: 0.8em;
}

form > div.campo {
    background-color: #5f2c82;
    border: 2px solid #5f2c82;
    display: block;
    width: 100%;
    height: 40px;
    border-radius: 8px;
    margin: 5px 0px;
}

div.campo > label {
    display: none;
}

div.campo > span {
    color: white;
    /*background-color: black;*/
    font-size: 2em;
    width: 40px;
    padding: 5px;
}

div.campo > input {
    background-color: #6de0dd;
    font-size: 1em;
    width: calc(100% - 45px); /*Formula de calculo para encaixar a o width dentro da caixa email e password.*/
    height: 100%;
    
    border: 0px;
    border-radius: 8px;
    padding: 4px;
    transform: translateY(-12px); /*Obs: Faça sempre o transform e transition sempre por último, ultima declaração como neste caso, para não dar bug*/
}

div.campo > input:focus-within { /*Para ganhar foco quando estiver digitando no espaço do imput, neste caso email e senha pois tem a mesma class que é campo. */

    background-color: white;
}

form > input[type=submit] {
    display: block;
    font-size: 1em;
    width: 100%;
    height: 40px;
    background-color: #49a09d;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
} 

form > input[type=submit]:hover {
    background-color: #2d6462;
}

form > a.botao {
    display: block;
    text-align: center;
    font-size: 1em;
    width: 100%;
    height: 40px;
    padding-top: 5px;
    margin-top: 5px;
    background-color: white;
    color: #2d6462;
    border: 1px solid #49a09d;
    border-radius: 5px;
    text-decoration: none;
}

form > a.botao:hover {
    background-color: #62d3cf;
}

form > a.botao > span {
    font-size: 0.8em;
}
